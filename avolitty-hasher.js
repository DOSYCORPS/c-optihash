const _0_0 = [
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f"
];

const avolittyHasher = function(_0_1) {
    let _0_2 = [0, 0, 0, 0, 0, 0, 0, 0];
    let _0_3 = 8;

    if (typeof _0_1 !== "string") {
        _0_3 = 1;

        if (typeof _0_1 === "object") {
            try {
                _0_1 = JSON.stringify(_0_1);
            } catch (_0_1) {
                _0_1 = "0";
            }
        }
    }

    _0_1 += "";
    let _0_4 = _0_1.length;
    let _0_5 = 2;
    let _0_6 = 0;
    let _0_7 = 0;

    while (_0_4 !== _0_6) {
        _0_5 = _0_1.charCodeAt(_0_6) + (_0_5 + (_0_5 >> 1) & 65535) + 2;
        _0_7 = _0_6++ & 7;
        _0_2[_0_7] = _0_5;
    }

    if (_0_3 === 1) {
        _0_3 = 8;
        _0_5 = (_0_5 + (_0_5 >> 1) & 65535) + 56789;
        _0_2[_0_7] = _0_5;
    }

    _0_1 = "";

    while (_0_3-- != 0) {
        _0_6 = 8;

        while (_0_6-- != 0) {
            _0_5 = _0_2[_0_6] + (_0_5 + (_0_5 + 2 >> 1)) & 65535;
            _0_2[_0_6] = _0_5;
        }

        _0_6 = _0_2[_0_3] & 15;
        _0_1 += _0_0[_0_6];
    }

    return _0_1;
};

if (((typeof module) !== 'undefined') && ((typeof module.exports) !== 'undefined')) {
    module.exports = avolittyHasher;
}
